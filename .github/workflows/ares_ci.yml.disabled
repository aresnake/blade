name: ARES CI+

on:
  push:
    branches: [ "dev" ]
    tags: [ "v*" ]
  workflow_dispatch:

jobs:
  quality:
    name: Lint & Syntax
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install tools
        run: pip install ruff
      - name: Ruff (warn-only)
        run: |
          ruff check ares || echo "::warning ::ruff found issues (not blocking)"
      - name: Syntax check (py_compile)
        run: |
          python - << 'PY'
import compileall, sys
ok = compileall.compile_dir('ares', maxlevels=10, quiet=1)
sys.exit(0 if ok else 1)
PY

  build:
    name: Build ZIP
    runs-on: ubuntu-latest
    needs: quality
    if: startsWith(github.ref, 'refs/heads/dev') || startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v4
      - name: Determine version
        id: ver
        run: |
          ver="0.0.0"
          if [ -f ares/__init__.py ]; then
            ver=$(python - <<'PY'
import re, io
t = io.open('ares/__init__.py','r',encoding='utf-8').read()
m = re.search(r"__version__\s*=\s*['\"]([^'\"]+)['\"]", t)
print(m.group(1) if m else '0.0.0')
PY
)
          fi
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            ver="${GITHUB_REF#refs/tags/}"; ver="${ver#v}"
          fi
          echo "version=$ver" >> "$GITHUB_OUTPUT"
      - name: Build zip (clean)
        run: |
          mkdir -p dist
          ZIP_NAME="blade_ares-${{ steps.ver.outputs.version }}.zip"
          zip -r "dist/$ZIP_NAME" ares \
            -x "ares/**/__pycache__/*" "ares/**/*.pyc" "ares/**/*.pyo" "ares/**/*.bak" "ares/**/*.orig"
          [ -f README.md ] && zip -u "dist/$ZIP_NAME" README.md
          ls -la dist
      - name: Upload artifact (dev)
        if: startsWith(github.ref, 'refs/heads/dev')
        uses: actions/upload-artifact@v4
        with:
          name: blade_ares-${{ steps.ver.outputs.version }}
          path: dist/*.zip
          if-no-files-found: error

  release:
    name: Release (tag)
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v4
      - name: Determine version (from tag)
        id: ver
        run: |
          ver="${GITHUB_REF#refs/tags/}"; ver="${ver#v}"
          echo "version=$ver" >> "$GITHUB_OUTPUT"
      - name: Rebuild zip
        run: |
          mkdir -p dist
          ZIP_NAME="blade_ares-${{ steps.ver.outputs.version }}.zip"
          zip -r "dist/$ZIP_NAME" ares \
            -x "ares/**/__pycache__/*" "ares/**/*.pyc" "ares/**/*.pyo" "ares/**/*.bak" "ares/**/*.orig"
          [ -f README.md ] && zip -u "dist/$ZIP_NAME" README.md
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          draft: false
          prerelease: false
          files: dist/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}